10 PRINT "sorting program on c64"
20 REM DEFINE A LIST OF NUMBERS TO SORT
30 DIM NUMS(20)
40 NUMS(1) = 10
50 NUMS(2) = 20
60 NUMS(3) = 5
70 NUMS(4) = 30
80 NUMS(5) = 15
90 NUMS(6) = 90
100 REM SET THE NUMBER OF ELEMENTS IN THE LIST
110 N = 6

120 REM CLEAR THE SCREEN, AND PRINT NUMBERS
130 PRINT CHR$(147)
140 PRINT "this is the numbers to be sorted"
150 FOR I = 1 TO N
160 PRINT I;": ";NUMS(I)
170 NEXT I


200 REM SELECT SORT METHOD.
210 PRINT "1: bubblesort"
220 PRINT "2: quicksort"
230 PRINT "choose sorting method (1 or 2):"
240 INPUT M
250 IF M = 1 THEN GOSUB 400
260 IF M = 2 THEN GOSUB 520
270 PRINT "sorted numbers:"
280 FOR I = 1 TO N
290   PRINT NUMS(I);
300 NEXT I
310 END

400 REM BUBBLESORT
410 FOR I = 1 TO N - 1
420   FOR J = 1 TO N - I
430     IF NUMS(J) > NUMS(J + 1) THEN GOSUB 470
440   NEXT J
450 NEXT I
460 RETURN

470 REM SWAP NUMBERS
480 TEMP = NUMS(J)
490 NUMS(J) = NUMS(J + 1)
500 NUMS(J + 1) = TEMP
510 RETURN

520 REM QUICKSORT
530 L = 1: R = N
540 GOSUB 560
550 RETURN

560 REM QUICKSORT RECURSIVE FUNCTION
570 IF L >= R THEN RETURN
580 P = NUMS(L): I = L: J = R
590 PRINT "1-nums: "; NUMS(L); " L="; L; " P="; P; " J="; J; " R="; R; " I="; I

600 REM PARTITIONING LOOP
610 REM Move J left while NUMS(J) is greater than P
615 PRINT "2-nums: "; NUMS(L); " L="; L; " P="; P; " J="; J; " R="; R; " I="; I
620 REM Ensure J does not become less than L
630 IF J >= L AND NUMS(J) >= P AND I < J AND J >= 1 THEN J = J - 1: IF J >= L THEN GOTO 620
640 REM Move I right while NUMS(I) is less than P
650 IF I < J AND NUMS(I) <= P THEN I = I + 1: GOTO 650
660 REM Swap elements if I < J
665 PRINT "3-j="; J; " i="; I
670 IF I < J AND J >= 1 THEN
680     REM Swap only if I != J
690     IF I <> J THEN
700         NUMS(I) = NUMS(J)
710         NUMS(J) = NUMS(I)
720     I = I + 1: J = J - 1
730     PRINT "4-j="; J; " i="; I
740     GOTO 600
750 REM Next iteration of partition loop
760 REM After partition, place P in its correct position
770 NUMS(J) = P

780 REM RECURSIVE CALL FOR LEFT AND RIGHT PARTITIONS
790 IF L < J - 1 THEN GOSUB 560
800 IF J + 1 < R THEN GOSUB 560
810 RETURN
