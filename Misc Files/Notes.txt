2025-01-25 : Funny thing observed on the c128
             It seems its slower at running this code.
             Also its running in 1MHz mode, you can change to 2MHz mode using
             POKE 53296,1
             http://commodore128.mirkosoft.sk/basic_v7.html
2025-01-25 : https://builtin.com/machine-learning/fastest-sorting-algorithm

Algoritms used
        Bubble Sort:  https://www.geeksforgeeks.org/bubble-sort-algorithm/
        metzner Sort: https://commodore.bombjack.org/commodore/books.htm

TODO: Check if other sorting algoritms needs to be added
      Cleanup, renumbering 
      Add user input of number of items in array, and Y/N to show result
        Think this is one of the last things to do, and the Y/N to show results
        gives an option of running all tests with no pause for showing the result
        for each algorithm.
      Memory survailance.
        I need to test out different ways of monitoring memory usage.
        Tested some ways in TestFreeMem.bas, but its not good and slow.
      Variable a1 not used
        I do not use a1 any more for selecting pivot point in qsort
        I should proberly remove it at some point, but leaving it in for now
        just in case I deside to use it again.


RESULTS FROM SORT
200 0   BS      10227   368
200 0   BS2     10227   382
200 0   QS      404     122
200 0   MET     1138    48

600 0   BS      86392   3038
600 0   BS2     86392   3192
600 0   QS      1467    525
600 0   MET     8270    284

600 1   BS      254     1541
600 1   BS2     254     25
600 1   QS      478     222
600 1   MET     218     73

600 2   BS      179700  4641
600 2   BS2     179700  4971
600 2   QS      648     257
600 2   MET     1580    105

600 3   BS      62110   2643
600 3   BS2     62110   2763
600 3   QS      1419    500
600 3   MET     9261    305

600 4   BS      22258   1952
600 4   BS2     22258   1955
600 4   QS      514     226
600 4   MET     3936    173

1000 0   BS      244765 8411
1000 0   BS2     244765 8876
1000 0   QS      2704   1093
1000 0   MET     24296  759


