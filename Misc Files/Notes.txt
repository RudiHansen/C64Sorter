2025-01-25 : Funny thing observed on the c128
             It seems its slower at running this code.
             Also its running in 1MHz mode, you can change to 2MHz mode using
             POKE 53296,1
             http://commodore128.mirkosoft.sk/basic_v7.html
2025-01-25 : https://builtin.com/machine-learning/fastest-sorting-algorithm

Algoritms used
        Bubble Sort:  https://www.geeksforgeeks.org/bubble-sort-algorithm/
        metzner Sort: https://commodore.bombjack.org/commodore/books.htm

TODO: Check if other sorting algoritms needs to be added
      Cleanup, renumbering 
      Add a routine for validating if the array is sorted.
      Add user input of number of items in array, and Y/N to show result
        Think this is one of the last things to do, and the Y/N to show results
        gives an option of running all tests with no pause for showing the result
        for each algorithm.
      Memory survailance.
        I need to test out different ways of monitoring memory usage.
        Tested some ways in TestFreeMem.bas, but its not good and slow.
      Exit point in qsort
        I have a problem with the code for qsort in lines 4000-
        Since I was not able to figure out where the code exits
        i have had to print the end information in lines 310 & 320
      Error in 9000 rem sub print array
        Line 9020 l1 = len(str$(ns(n)))+1: rem get len of last element in index
        Need to find another way to do this, it gives problem if last item in list
        is shorter than some of the othere.
      Look at sorted list, not sure that the resulting sorted list is correct.
        There might be a problem with some of the sorting methods.
        Seen a problem with qsort, with a3=2: 2=rseq, it is not sorting the numbers right.
        


RESULTS FROM SORT
200 BS      10227   333
200 BS2     10227   346
200 QS      621     70
200 MET     1138    44
600 BS      86392   2784
600 BS2     86392   2925
600 QS      2633    281
600 MET     8270    256
